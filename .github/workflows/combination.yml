# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Stack CI with Maven and Yarn - Coverage report to Code Climate

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
    java:
      name: Create and upload Java coverage artifact
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v2
      - name: Set ENV for codeclimate (pull_request)
        run: |
          git fetch --no-tags --prune --depth=1 origin +refs/heads/$GITHUB_HEAD_REF:refs/remotes/origin/$GITHUB_HEAD_REF
          echo "::set-env name=GIT_BRANCH::$GITHUB_HEAD_REF"
          echo "::set-env name=GIT_COMMIT_SHA::$(git rev-parse origin/$GITHUB_HEAD_REF)"
        if: github.event_name == 'pull_request'
        
      - name: Set ENV for codeclimate (push)
        run: |
          echo "::set-env name=GIT_BRANCH::$GITHUB_REF"
          echo "::set-env name=GIT_COMMIT_SHA::$GITHUB_SHA"
        if: github.event_name == 'push'
        
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
        
      - name: Build with Maven
        run: mvn -B verify -P all --file src/backend/pom.xml
        
      - name: WHERE AM I?
        run: |
          for s in efiling-backend-demo efiling-worker jag-efiling-api
          do
            ls ${{ github.workspace }}/src/backend/$s/target/site/jacoco;
          done
      
      - name: Download Code Climate Binary
        run: curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
      
      - name: Apply executable perms to Code Climate Binary
        run: chmod +x ./cc-test-reporter
      
      - name: Format Coverage report
        env:	
          CC_TEST_REPORTER_ID: ${{secrets.CC_TEST_REPORTER_ID}}  
        run: JACOCO_SOURCE_PATH=${{ github.workspace }}/src/backend/jag-efiling-api/src/main/java ./cc-test-reporter format-coverage ${{github.workspace}}/src/backend/jag-efiling-api/target/site/jacoco/jacoco.xml --input-type jacoco --output coverage/codeclimate.java1-8.json
      
      - name: WHERE AM I DEUX?
        run: ls ${{ github.workspace }}/coverage
      
      - name: Upload java artifact result
        uses: actions/upload-artifact@v1
        with:
          name: java_coverage_report
          path: coverage/codeclimate.java1-8.json
          
